source('./r_files/flatten_HTML.r')
setwd("~/melbmap")
source('./r_files/flatten_HTML.r')
############### Library Declarations ###############
libraryRequireInstall("ggplot2");
############### Library Declarations ###############
libraryRequireInstall("remotes");
libraryRequireInstall("echarts4r");
libraryRequireInstall("geojsonsf");
install.packages(c("echarts4r","geojsonsf"))
install.packages(c("echarts4r", "geojsonsf"))
devtools::install_github("carlosyanez/aussiemaps")
remotes::install_github("carlosyanez/aussiemaps")
library(aussiemaps)
library(geojsonsf)
locations.table
victoria <- locations.table %>% filter(State=="VIC")
library(tidyverse)
victoria <- locations.table %>% filter(State=="VIC")
vic <- load_map(victoria,aggregation = "LGA")
View(vic)
vic_json <- geojsonsf(vic)
vic_json <- sf_geojson(vic)
test <- tibble(LGA="Moreland", value=1)
library(echarts4r)
e_charts() |>
e_map_register("Victoria", vic_json) |>
e_map(map = "Victoria", nameProperty = "LGA")
test %>%
e_charts() %>%
e_map_register("Victoria", vic_json) %>%
e_map(value,map = "Victoria", nameProperty = "LGA")
test <- tibble(LGA="Milura", value=500)
library(echarts4r)
test %>%
e_charts() %>%
e_map_register("Victoria", vic_json) %>%
e_map(value,map = "Victoria", nameProperty = "LGA")
test <- tibble(LGA="Mildura", value=500)
library(echarts4r)
test %>%
e_charts() %>%
e_map_register("Victoria", vic_json) %>%
e_map(value,map = "Victoria", nameProperty = "LGA")
test %>%
e_charts() %>%
e_map_register("Victoria", vic_json) %>%
e_map(value,map = "Victoria", nameProperty = "LGA") %>%
e_visual_map(value)
test <- victoria %>% distinct(LGA) %>% mutate(value=row_number())
test %>%
e_charts() %>%
e_map_register("Victoria", vic_json) %>%
e_map(value,map = "Victoria", nameProperty = "LGA") %>%
e_visual_map(value)
test %>%
e_charts(LGA) %>%
e_map_register("Victoria", vic_json) %>%
e_map(value,map = "Victoria", nameProperty = "LGA") %>%
e_visual_map(value)
saveRDS(vic_json,"assets/shapes.rds")
write_csv(test,"test.csv")
test |>
e_charts(LGA) |>
e_map_register("Victoria", vic_json) |>
e_map(value,map = "Victoria", nameProperty = "LGA") |>
e_visual_map(value) |>
e_theme("infographic")
test |>
e_charts(Values$LGA) |>
e_map_register("Victoria", vic_json) |>
e_map(Values$value,map = "Victoria", nameProperty = "LGA") |>
e_visual_map(Values$value) |>
e_datazoom() |>
e_zoom(
dataZoomIndex = 0,
start = 20,
end = 40
)
test |>
e_charts(LGA) |>
e_map_register("Victoria", vic_json) |>
e_map(value,map = "Victoria", nameProperty = "LGA") |>
e_visual_map(value) |>
e_datazoom() |>
e_zoom(
dataZoomIndex = 0,
start = 20,
end = 40
)
install.packages("geojsonio")
library(geojsonio)
setwd("~/pbiviclga")
#saveRDS(vic_json,"assets/shapes.rds")
geojsonio::geojson_write(vic_json, file = "assets/shapes.geojson")
dataset <- test
dataset |>
e_charts(LGA) |>
e_map_register("Victoria", vic_json) |>
e_map(value,map = "Victoria", nameProperty = "LGA") |>
e_visual_map(value)
libraryRequireInstall("echarts4r");
vic_map <-
dataset |>
e_charts(LGA) |>
e_map_register("Victoria", vic_json) |>
e_map(value,map = "Victoria", nameProperty = "LGA") |>
e_visual_map(value)
vic_map
install.packages("rgeos)
?
""
)
)
knjfnjpd\
)
")
vic <- gSimplify(vic, topologyPreserve = TRUE, tol = 0.05)
library(rgeos)
victoria <- locations.table %>% filter(State=="VIC")
vic <- gSimplify(vic, topologyPreserve = TRUE, tol = 0.05)
victoria <- locations.table %>% filter(State=="VIC")
library(aussiemaps)
library(geojsonsf)
library(tidyverse)
library(geojsonio)
library(rgeos)
vic <- gSimplify(vic, topologyPreserve = TRUE, tol = 0.05)
library(rmapshaper)
install.packages("rmapshaper")
library(rmapshaper)
vic2 <- rmapshaper::ms_simplify(input = as(vic, 'Spatial')) %>%
st_as_sf()
library(sf)
vic2 <- rmapshaper::ms_simplify(input = as(vic, 'Spatial')) %>%
st_as_sf()
vic_json <- sf_geojson(vic2)
saveRDS(vic_json,"assets/shapes.rds")
vic_map <-
dataset |>
e_charts(LGA) |>
e_map_register("Victoria", vic_json) |>
e_map(value,map = "Victoria", nameProperty = "LGA") |>
e_visual_map(value)
vic_map
vic_json$LGA
vic_json
as_tibble(vic_json)
download.file("https://github.com/carlosyanez/pbiviclga/raw/main/assets/shapes.rds","shapes.rds")
vic_json <- readRDS("shapes.rds")
install.packages(""jsonlite)
")"
install.packages("jsonlite")
install.packages("jsonlite")
source('./r_files/flatten_HTML.r')
############### Library Declarations ###############
libraryRequireInstall("echarts4r");
libraryRequireInstall("jsonlite");
download.file("https://github.com/carlosyanez/pbiviclga/raw/main/assets/shapes.rds","shapes.rds")
vic_json <- readRDS("shapes.rds")
LGAS <- as_tibble(vic_json)
libraryRequireInstall("tibble");
libraryRequireInstall("dplyr");
LGAS <- as_tibble(vic_json)
libraryRequireInstall("geojsonsf");
geojson_sf(vic_json)
geojson_sf(vic_json) %>% select(LGA)
LGAs <- geojson_sf(vic_json) |> select(LGA)
dataset |>
e_charts(LGA) |>
e_map_register("Victoria", vic_json) |>
e_map(value,map = "Victoria", nameProperty = "LGA") |>
e_visual_map(value)
